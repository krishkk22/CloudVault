rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Notes collection rules
    match /notes/{noteId} {
      allow read: if isAuthenticated() && (resource.data.userId == request.auth.uid);
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // Files collection rules
    match /files/{fileId} {
      allow read: if isAuthenticated() && (resource.data.userId == request.auth.uid);
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // Users collection rules (if you have one)
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Test collection rules (for testing)
    match /test/{testId} {
      allow read, write: if isAuthenticated();
    }
  }
} 